# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java Deploy the app to vps server

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn clean install
      - name: Upload application
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: 22
          source: "target/myspringbootapp-0.0.1-SNAPSHOT.jar"
          target: "~/source"
      - name: Start Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: 22
          script: |
            #!/bin/bash
            if lsof -Pi :8080 -sTCP:LISTEN -t >/dev/null ; then
                    sudo kill -9 $(lsof -t -i:8080)
                    lsof -Pi :8080 -sTCP:LISTEN -t
                else
                    if test -f /log.out; then
                        rm log.out
                    fi
                    nohup java -jar ~/source/target/myspringbootapp-0.0.1-SNAPSHOT.jar > log.out 2>&1 &
            fi


